from aiogram import types, Router
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


router = Router()


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å —ç–º–æ–¥–∑–∏ –∏ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
def get_main_menu():
    buttons = [
        [
            InlineKeyboardButton(text="üì± –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç", callback_data="assortment"),
            InlineKeyboardButton(text="üïí –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã", callback_data="work_hours")
        ],
        [
            InlineKeyboardButton(text="üìç –ö–∞–∫ –Ω–∞—Å –Ω–∞–π—Ç–∏", callback_data="location"),
            InlineKeyboardButton(text="üí≥ –ö—Ä–µ–¥–∏—Ç", callback_data="credit")
        ],
        [
            InlineKeyboardButton(text="‚ôªÔ∏è Trade-in", callback_data="tradein"),
            InlineKeyboardButton(text="üõ°Ô∏è –ì–∞—Ä–∞–Ω—Ç–∏—è", callback_data="warranty")
        ],
        [
            InlineKeyboardButton(text="üéÅ –ü–æ–¥–∞—Ä–∫–∏", callback_data="gifts"),
            InlineKeyboardButton(text="‚≠ê –û—Ç–∑—ã–≤—ã", callback_data="reviews")
        ],
        [
            InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º", callback_data="contact")
        ]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(Command("start"))
async def cmd_start(message: types.Message):
    try:
        welcome_text = (
            "üõç –ú—ã –º–∞–≥–∞–∑–∏–Ω —Ç–µ—Ö–Ω–∏–∫–∏ <b>–ì–∞–¥–∂–µ—Ç –°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å</b>\n\n"
            "‚ñ™Ô∏è üéÅ –ø–æ–¥–∞—Ä–∫–∏ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ\n"
            "‚ñ™Ô∏è üí≥ –∫—Ä–µ–¥–∏—Ç, Trade-in\n"
            "‚ñ™Ô∏è üöö –¥–æ—Å—Ç–∞–≤–∫–∞"
        )
        await message.answer(welcome_text, reply_markup=get_main_menu(), parse_mode="HTML")
    except:
        pass


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
async def back_to_main(callback: types.CallbackQuery):
    welcome_text = (
        "üõçÔ∏è –ú—ã –º–∞–≥–∞–∑–∏–Ω —Ç–µ—Ö–Ω–∏–∫–∏ <b>–ì–∞–¥–∂–µ—Ç –°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å</b>\n\n"
        "‚ñ™Ô∏è üéÅ –ø–æ–¥–∞—Ä–∫–∏ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ\n"
        "‚ñ™Ô∏è üí≥ –∫—Ä–µ–¥–∏—Ç, Trade-in\n"
        "‚ñ™Ô∏è üöö –¥–æ—Å—Ç–∞–≤–∫–∞"
    )
    await callback.message.edit_text(welcome_text, reply_markup=get_main_menu(), parse_mode="HTML")
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
@router.callback_query(lambda c: c.data == "assortment")
async def process_assortment(callback: types.CallbackQuery):
    try:
        text = "üì± –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ –≤—Å–µ–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º –º–æ–∂–Ω–æ –Ω–∞ –Ω–∞—à–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ:\n\nüîó https://gadjet-sevastopol.ru"
        buttons = [
            [InlineKeyboardButton(text="üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url="https://gadjet-sevastopol.ru")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")]
        ]
        keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
        await callback.message.edit_text(text, reply_markup=keyboard)
        await callback.answer()
    except:
        pass


@router.callback_query(lambda c: c.data == "work_hours")
async def process_work_hours(callback: types.CallbackQuery):
    try:
        text = (
            "üïí <b>–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</b>\n\n"
            "–†–∞–±–æ—Ç–∞–µ–º –¥–ª—è –≤–∞—Å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ\n"
            "–±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–∞ –∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö\n"
            "‚åõ —Å 10:00 –¥–æ 20:00"
        )
        buttons = [[InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")]]
        keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
        await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
        await callback.answer()
    except:
        pass


@router.callback_query(lambda c: c.data == "location")
async def process_location(callback: types.CallbackQuery):
    try:
        text = (
            "üìç <b>–ö–∞–∫ –Ω–∞—Å –Ω–∞–π—Ç–∏</b>\n\n"
            "–Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –º–∞—Ä—à—Ä—É—Ç, –ø–µ—Ä–µ–π–¥—è –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ :\n\n"
            "üîó https://yandex.eu/maps/org/gadjet_crimea/118536854805/?ll=33.457752%2C44.592044&z=15"
        )
        buttons = [
            [InlineKeyboardButton(text="üó∫Ô∏è –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É", url="https://yandex.eu/maps/org/gadjet_crimea/118536854805/?ll=33.457752%2C44.592044&z=15")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")]
        ]
        keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
        await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
        await callback.answer()
    except:
        pass

@router.callback_query(lambda c: c.data == "credit")
async def process_credit(callback: types.CallbackQuery):
    try:
        text = (
            "üí≥ <b>–ö—Ä–µ–¥–∏—Ç –Ω–∞ —Ç–µ—Ö–Ω–∏–∫—É</b>\n\n"
            "–û—Ñ–æ—Ä–º–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É –≤ –∫—Ä–µ–¥–∏—Ç –Ω–∞ –≤—ã–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö!\n"
            "üöÄ –ë—ã—Å—Ç—Ä–æ, —É–¥–æ–±–Ω–æ –∏ –±–µ–∑ –ø–µ—Ä–µ–ø–ª–∞—Ç\n"
            "üí∏ –î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—Å–µ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –æ—Ç 2% –ø–µ—Ä–µ–ø–ª–∞—Ç—ã –≤ –º–µ—Å—è—Ü\n\n"
            "üè¶ –ö—Ä–µ–¥–∏—Ç –æ—Ç –≤–µ–¥—É—â–∏—Ö –±–∞–Ω–∫–æ–≤!\n"
            "üì± –ï—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É –æ–Ω–ª–∞–π–Ω\n\n"
            "–î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –Ω–∞–∂–º–∏—Ç–µ –≤ –º–µ–Ω—é ¬´üìû –°–≤—è–∑–∞—Ç—å—Å—è¬ª"
        )
        buttons = [[InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")]]
        keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
        await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
        await callback.answer()
    except:
        pass


@router.callback_query(lambda c: c.data == "tradein")
async def process_tradein(callback: types.CallbackQuery):
    try:
        text = (
            "‚ôªÔ∏è <b>Trade-in</b>\n\n"
            "–û–±–Ω–æ–≤–∏—Ç–µ —Ç–µ—Ö–Ω–∏–∫—É –ø–æ —Å–∏—Å—Ç–µ–º–µ Trade-in!\n"
            "üì± –ü—Ä–∏–º–µ–º –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏ –∑–∞—á—Ç—ë–º –µ–≥–æ —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –Ω–æ–≤–æ–≥–æ\n"
            "‚ö° –ë—ã—Å—Ç—Ä–æ, —É–¥–æ–±–Ω–æ –∏ –≤—ã–≥–æ–¥–Ω–æ!\n\n"
            "–î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –Ω–∞–∂–º–∏—Ç–µ –≤ –º–µ–Ω—é ¬´üìû –°–≤—è–∑–∞—Ç—å—Å—è¬ª"
        )
        buttons = [[InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")]]
        keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
        await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
        await callback.answer()
    except:
        pass


@router.callback_query(lambda c: c.data == "warranty")
async def process_warranty(callback: types.CallbackQuery):
    try:
        text = (
            "üõ°Ô∏è <b>–ì–∞—Ä–∞–Ω—Ç–∏—è</b>\n\n"
            "–ü–æ–∫—É–ø–∞–π—Ç–µ —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é ‚Äî –º—ã –∑–∞–±–æ—Ç–∏–º—Å—è –æ –∫–∞—á–µ—Å—Ç–≤–µ –∏ –≤–∞—à–µ–π –∑–∞—â–∏—Ç–µ.\n\n"
            "üÜï –ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –Ω–æ–≤—É—é —Ç–µ—Ö–Ω–∏–∫—É - <b>12 –º–µ—Å—è—Ü–µ–≤</b>\n"
            "üîÑ –ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –±/—É —Ç–µ—Ö–Ω–∏–∫—É - <b>2 –º–µ—Å—è—Ü–∞</b>"
        )
        buttons = [[InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")]]
        keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
        await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
        await callback.answer()
    except:
        pass


@router.callback_query(lambda c: c.data == "gifts")
async def process_gifts(callback: types.CallbackQuery):
    try:
        text = (
            "üéÅ <b>–ü–æ–¥–∞—Ä–∫–∏ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ</b>\n\n"
            "–ó–∞–±–æ—Ç–∞ –æ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ —Å –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è!\n\n"
            "–ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –Ω–æ–≤–æ–≥–æ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞ –¥–∞—Ä–∏–º:\n"
            "üì± –ß–µ—Ö–æ–ª\n"
            "üñ•Ô∏è –ó–∞—â–∏—Ç–Ω–æ–µ —Å—Ç–µ–∫–ª–æ\n\n"
            "–¢–∞–∫–∂–µ –º—ã:\n"
            "üîÅ –ü–µ—Ä–µ–Ω–µ—Å–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ —Å—Ç–∞—Ä–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞\n"
            "üçé –ü–æ–º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å Apple ID\n"
            "üì≤ –£—Å—Ç–∞–Ω–æ–≤–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤–Ω–µ AppStore\n\n"
            "üéâ <b>–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!</b>\n"
            "–ï—Å–ª–∏ –≤—ã –≤–ø–µ—Ä–≤—ã–µ –ø–æ–∫—É–ø–∞–µ—Ç–µ —É –Ω–∞—Å —Å–º–∞—Ä—Ç—Ñ–æ–Ω, –Ω–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–¥–∞–≤—Ü—É –≤ Telegram –∫–æ–¥ <code>perviy500</code> –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 500 ‚ÇΩ\n\n"
            "‚ÜóÔ∏è Telegram: @GadjetSevastopol\n"
            "üìû –ö–æ–Ω—Ç–∞–∫—Ç: +7 (978) 008-02-08"
        )
        buttons = [[InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")]]
        keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
        await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
        await callback.answer()
    except:
        pass


@router.callback_query(lambda c: c.data == "reviews")
async def process_reviews(callback: types.CallbackQuery):
    try:
        text = (
            "‚≠ê <b>–û—Ç–∑—ã–≤—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π</b>\n\n"
            "–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –æ—Ç–∑—ã–≤–∞–º–∏ –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:\n\n"
            "üîó https://yandex.eu/maps/org/gadjet_crimea/118536854805/reviews/?ll=33.457752%2C44.592044&tab=reviews&z=15"
        )
        buttons = [
            [InlineKeyboardButton(text="üìù –ß–∏—Ç–∞—Ç—å –æ—Ç–∑—ã–≤—ã", url="https://yandex.eu/maps/org/gadjet_crimea/118536854805/reviews/?ll=33.457752%2C44.592044&tab=reviews&z=15")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")]
        ]
        keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
        await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
        await callback.answer()
    except:
        pass


@router.callback_query(lambda c: c.data == "contact")
async def process_contact(callback: types.CallbackQuery):
    try:
        text = (
            "üìû <b>–°–≤—è–∑—å —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º</b>\n\n"
    
            "‚è≥ –ù–∞ —Å–≤—è–∑–∏ —Å –≤–∞–º–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ\n"
            "üïí —Å 10:00 –¥–æ 20:00\n\n"
            "‚ÜóÔ∏è Telegram: @GadjetSevastopol\n"
            "‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω: <code>+7 (978) 008-02-08</code>"
        )
        buttons = [[InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back")]]
        keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
        await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
        await callback.answer()
    except:
        pass


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
@router.callback_query(lambda c: c.data == "back")
async def process_back(callback: types.CallbackQuery):
    try:
        await back_to_main(callback)
    except:
        pass
